{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizimHesap\\\\accounting-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendMessage, setBackendMessage] = useState('');\n  useEffect(() => {\n    // Function to fetch data from Django\n    const fetchData = async () => {\n      try {\n        // Make a GET request to our Django API endpoint\n        const response = await axios.get('http://127.0.0.1:8000/api/');\n        // Update the state with the message from the backend\n        setBackendMessage(response.data.message);\n      } catch (error) {\n        console.error(\"Error fetching data from backend:\", error);\n        setBackendMessage('Could not connect to backend.');\n      }\n    };\n    fetchData();\n  }, []); // The empty array ensures this effect runs only once on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accounting Application Frontend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Connection Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), \" \", backendMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uBcVt1iR2n6lX+oJbAuQHEH04kY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","backendMessage","setBackendMessage","fetchData","response","get","data","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/BizimHesap/accounting-app/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [backendMessage, setBackendMessage] = useState('');\n\n  useEffect(() => {\n    // Function to fetch data from Django\n    const fetchData = async () => {\n      try {\n        // Make a GET request to our Django API endpoint\n        const response = await axios.get('http://127.0.0.1:8000/api/');\n        // Update the state with the message from the backend\n        setBackendMessage(response.data.message);\n      } catch (error) {\n        console.error(\"Error fetching data from backend:\", error);\n        setBackendMessage('Could not connect to backend.');\n      }\n    };\n\n    fetchData();\n  }, []); // The empty array ensures this effect runs only once on component mount\n\n  return (\n    <div className=\"App\">\n      <h1>Accounting Application Frontend</h1>\n      <p><strong>Connection Status:</strong> {backendMessage}</p>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,4BAA4B,CAAC;QAC9D;QACAH,iBAAiB,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzDN,iBAAiB,CAAC,+BAA+B,CAAC;MACpD;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxCjB,OAAA;MAAAa,QAAA,gBAAGb,OAAA;QAAAa,QAAA,EAAQ;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACd,cAAc;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACf,EAAA,CA1BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
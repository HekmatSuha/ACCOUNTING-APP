{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizimHesap\\\\accounting-app\\\\frontend\\\\src\\\\pages\\\\ExpenseListPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ExpenseListPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { Table, Button, Card, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\n\n// Helper function to get today's date in YYYY-MM-DD format\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayDate = () => {\n  const today = new Date();\n  const yyyy = today.getFullYear();\n  const mm = String(today.getMonth() + 1).padStart(2, '0');\n  const dd = String(today.getDate()).padStart(2, '0');\n  return `${yyyy}-${mm}-${dd}`;\n};\nfunction ExpenseListPage() {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentExpense, setCurrentExpense] = useState(null);\n  const [formData, setFormData] = useState({\n    amount: '',\n    expense_date: getTodayDate(),\n    description: '',\n    category: ''\n  });\n  const [error, setError] = useState('');\n\n  // Fetch both expenses and categories when the component loads\n  const fetchData = async () => {\n    try {\n      const [expensesRes, categoriesRes] = await Promise.all([axiosInstance.get('/expenses/'), axiosInstance.get('/expense-categories/')]);\n      setExpenses(expensesRes.data);\n      setCategories(categoriesRes.data);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      setError('Could not fetch expenses or categories.');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleInputChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleShowModal = (expense = null) => {\n    if (expense) {\n      setIsEditing(true);\n      setCurrentExpense(expense);\n      setFormData({\n        amount: expense.amount,\n        expense_date: expense.expense_date,\n        description: expense.description || '',\n        category: expense.category || ''\n      });\n    } else {\n      setIsEditing(false);\n      setCurrentExpense(null);\n      setFormData({\n        amount: '',\n        expense_date: getTodayDate(),\n        description: '',\n        category: ''\n      });\n    }\n    setShowModal(true);\n    setError('');\n  };\n  const handleCloseModal = () => setShowModal(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isEditing ? `/expenses/${currentExpense.id}/` : '/expenses/';\n    const method = isEditing ? 'put' : 'post';\n\n    // Make a copy of the form data to avoid mutating state directly\n    const dataToSubmit = {\n      ...formData\n    };\n    // Ensure the category is null if it's an empty string, otherwise send the integer ID\n    dataToSubmit.category = dataToSubmit.category ? parseInt(dataToSubmit.category) : null;\n    try {\n      await axiosInstance[method](url, dataToSubmit);\n      fetchData();\n      handleCloseModal();\n    } catch (err) {\n      var _err$response;\n      console.error('Failed to save expense:', (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data);\n      setError('Failed to save expense. Please check your input.');\n    }\n  };\n  const handleDelete = async expenseId => {\n    if (window.confirm('Are you sure you want to delete this expense?')) {\n      try {\n        await axiosInstance.delete(`/expenses/${expenseId}/`);\n        fetchData(); // Refresh list after delete\n      } catch (error) {\n        console.error('Failed to delete expense:', error);\n        setError('Failed to delete expense.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleShowModal(),\n          children: \"+ New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.expense_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.category_name || 'Uncategorized'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: expense.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", parseFloat(expense.amount).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  size: \"sm\",\n                  className: \"me-2\",\n                  onClick: () => handleShowModal(expense),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  size: \"sm\",\n                  onClick: () => handleDelete(expense.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 37\n              }, this)]\n            }, expense.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isEditing ? 'Edit Expense' : 'Add New Expense'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"amount\",\n                  value: formData.amount,\n                  onChange: handleInputChange,\n                  required: true,\n                  step: \"0.01\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Expense Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"expense_date\",\n                  value: formData.expense_date,\n                  onChange: handleInputChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"category\",\n              value: formData.category,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Uncategorized\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat.id,\n                children: cat.name\n              }, cat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              name: \"description\",\n              value: formData.description,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ExpenseListPage, \"ZNhIPzTOO4bz4lhvVi1N8IkP/O8=\");\n_c = ExpenseListPage;\nexport default ExpenseListPage;\nvar _c;\n$RefreshReg$(_c, \"ExpenseListPage\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","Table","Button","Card","Modal","Form","Alert","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayDate","today","Date","yyyy","getFullYear","mm","String","getMonth","padStart","dd","getDate","ExpenseListPage","_s","expenses","setExpenses","categories","setCategories","showModal","setShowModal","isEditing","setIsEditing","currentExpense","setCurrentExpense","formData","setFormData","amount","expense_date","description","category","error","setError","fetchData","expensesRes","categoriesRes","Promise","all","get","data","console","handleInputChange","e","target","name","value","handleShowModal","expense","handleCloseModal","handleSubmit","preventDefault","url","id","method","dataToSubmit","parseInt","err","_err$response","response","handleDelete","expenseId","window","confirm","delete","children","Header","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Body","striped","bordered","hover","responsive","map","category_name","parseFloat","toFixed","size","show","onHide","closeButton","Title","onSubmit","Group","Label","Control","type","onChange","required","step","Select","cat","as","rows","Footer","_c","$RefreshReg$"],"sources":["E:/BizimHesap/accounting-app/frontend/src/pages/ExpenseListPage.js"],"sourcesContent":["// frontend/src/pages/ExpenseListPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../utils/axiosInstance';\r\nimport { Table, Button, Card, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\r\n\r\n// Helper function to get today's date in YYYY-MM-DD format\r\nconst getTodayDate = () => {\r\n    const today = new Date();\r\n    const yyyy = today.getFullYear();\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    return `${yyyy}-${mm}-${dd}`;\r\n};\r\n\r\nfunction ExpenseListPage() {\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [currentExpense, setCurrentExpense] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        amount: '',\r\n        expense_date: getTodayDate(),\r\n        description: '',\r\n        category: ''\r\n    });\r\n    const [error, setError] = useState('');\r\n\r\n    // Fetch both expenses and categories when the component loads\r\n    const fetchData = async () => {\r\n        try {\r\n            const [expensesRes, categoriesRes] = await Promise.all([\r\n                axiosInstance.get('/expenses/'),\r\n                axiosInstance.get('/expense-categories/')\r\n            ]);\r\n            setExpenses(expensesRes.data);\r\n            setCategories(categoriesRes.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch data:', error);\r\n            setError('Could not fetch expenses or categories.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleShowModal = (expense = null) => {\r\n        if (expense) {\r\n            setIsEditing(true);\r\n            setCurrentExpense(expense);\r\n            setFormData({\r\n                amount: expense.amount,\r\n                expense_date: expense.expense_date,\r\n                description: expense.description || '',\r\n                category: expense.category || ''\r\n            });\r\n        } else {\r\n            setIsEditing(false);\r\n            setCurrentExpense(null);\r\n            setFormData({\r\n                amount: '',\r\n                expense_date: getTodayDate(),\r\n                description: '',\r\n                category: ''\r\n            });\r\n        }\r\n        setShowModal(true);\r\n        setError('');\r\n    };\r\n\r\n    const handleCloseModal = () => setShowModal(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const url = isEditing ? `/expenses/${currentExpense.id}/` : '/expenses/';\r\n        const method = isEditing ? 'put' : 'post';\r\n\r\n        // Make a copy of the form data to avoid mutating state directly\r\n        const dataToSubmit = { ...formData };\r\n        // Ensure the category is null if it's an empty string, otherwise send the integer ID\r\n        dataToSubmit.category = dataToSubmit.category ? parseInt(dataToSubmit.category) : null;\r\n\r\n\r\n        try {\r\n            await axiosInstance[method](url, dataToSubmit);\r\n            fetchData();\r\n            handleCloseModal();\r\n        } catch (err) {\r\n            console.error('Failed to save expense:', err.response?.data);\r\n            setError('Failed to save expense. Please check your input.');\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (expenseId) => {\r\n        if (window.confirm('Are you sure you want to delete this expense?')) {\r\n            try {\r\n                await axiosInstance.delete(`/expenses/${expenseId}/`);\r\n                fetchData(); // Refresh list after delete\r\n            } catch (error) {\r\n                console.error('Failed to delete expense:', error);\r\n                setError('Failed to delete expense.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                    <h4>Expenses</h4>\r\n                    <Button variant=\"primary\" onClick={() => handleShowModal()}>\r\n                        + New Expense\r\n                    </Button>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Table striped bordered hover responsive>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Category</th>\r\n                                <th>Description</th>\r\n                                <th>Amount</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {expenses.map((expense) => (\r\n                                <tr key={expense.id}>\r\n                                    <td>{expense.expense_date}</td>\r\n                                    <td>{expense.category_name || 'Uncategorized'}</td>\r\n                                    <td>{expense.description}</td>\r\n                                    <td>${parseFloat(expense.amount).toFixed(2)}</td>\r\n                                    <td>\r\n                                        <Button variant=\"warning\" size=\"sm\" className=\"me-2\" onClick={() => handleShowModal(expense)}>Edit</Button>\r\n                                        <Button variant=\"danger\" size=\"sm\" onClick={() => handleDelete(expense.id)}>Delete</Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <Modal show={showModal} onHide={handleCloseModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{isEditing ? 'Edit Expense' : 'Add New Expense'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Amount</Form.Label>\r\n                                    <Form.Control type=\"number\" name=\"amount\" value={formData.amount} onChange={handleInputChange} required step=\"0.01\" />\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col>\r\n                                <Form.Group className=\"mb-3\">\r\n                                    <Form.Label>Expense Date</Form.Label>\r\n                                    <Form.Control type=\"date\" name=\"expense_date\" value={formData.expense_date} onChange={handleInputChange} required />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Select name=\"category\" value={formData.category} onChange={handleInputChange}>\r\n                                <option value=\"\">Uncategorized</option>\r\n                                {categories.map(cat => (\r\n                                    <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                                ))}\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} name=\"description\" value={formData.description} onChange={handleInputChange} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={handleSubmit}>Save Changes</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExpenseListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
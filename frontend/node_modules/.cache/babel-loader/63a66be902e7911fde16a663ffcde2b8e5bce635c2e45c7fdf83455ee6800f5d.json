{"ast":null,"code":"var _jsxFileName = \"E:\\\\BizimHesap\\\\accounting-app\\\\frontend\\\\src\\\\pages\\\\ExpenseListPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ExpenseListPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../utils/axiosInstance';\nimport { Table, Button, Card, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\nimport CategoryManagerModal from '../components/CategoryManagerModal'; // <-- 1. IMPORT THE NEW MODAL\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTodayDate = () => {/* ... (no changes in this helper function) ... */};\nfunction ExpenseListPage() {\n  _s();\n  // ... (no changes to the first block of state variables) ...\n  const [showCategoryModal, setShowCategoryModal] = useState(false); // <-- 2. ADD STATE FOR THE NEW MODAL\n\n  // The fetchData function now becomes our single source of truth for refreshing data\n  const fetchData = async () => {\n    try {\n      const [expensesRes, categoriesRes] = await Promise.all([axiosInstance.get('/expenses/'), axiosInstance.get('/expense-categories/')]);\n      setExpenses(expensesRes.data);\n      setCategories(categoriesRes.data);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n      setError('Could not fetch expenses or categories.');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // ... (no changes to handleInputChange, handleShowModal, handleCloseModal, handleSubmit, handleDelete) ...\n  const handleInputChange = e => {/* ... */};\n  const handleShowModal = (expense = null) => {/* ... */};\n  const handleCloseModal = () => setShowModal(false);\n  const handleSubmit = async e => {/* ... */};\n  const handleDelete = async expenseId => {/* ... */};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            className: \"me-2\",\n            onClick: () => setShowCategoryModal(true),\n            children: \"Manage Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleShowModal(),\n            children: \"+ New Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryManagerModal, {\n      show: showCategoryModal,\n      handleClose: () => setShowCategoryModal(false),\n      categories: categories,\n      onUpdate: fetchData // Pass fetchData as the callback to refresh the list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ExpenseListPage, \"G84G448QWxk7yJsIST5VnJO0hwk=\");\n_c = ExpenseListPage;\nexport default ExpenseListPage;\nvar _c;\n$RefreshReg$(_c, \"ExpenseListPage\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","Table","Button","Card","Modal","Form","Alert","Row","Col","CategoryManagerModal","jsxDEV","_jsxDEV","Fragment","_Fragment","getTodayDate","ExpenseListPage","_s","showCategoryModal","setShowCategoryModal","fetchData","expensesRes","categoriesRes","Promise","all","get","setExpenses","data","setCategories","error","console","setError","handleInputChange","e","handleShowModal","expense","handleCloseModal","setShowModal","handleSubmit","handleDelete","expenseId","children","Header","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","Body","show","showModal","onHide","handleClose","categories","onUpdate","_c","$RefreshReg$"],"sources":["E:/BizimHesap/accounting-app/frontend/src/pages/ExpenseListPage.js"],"sourcesContent":["// frontend/src/pages/ExpenseListPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../utils/axiosInstance';\r\nimport { Table, Button, Card, Modal, Form, Alert, Row, Col } from 'react-bootstrap';\r\nimport CategoryManagerModal from '../components/CategoryManagerModal'; // <-- 1. IMPORT THE NEW MODAL\r\n\r\nconst getTodayDate = () => { /* ... (no changes in this helper function) ... */ };\r\n\r\nfunction ExpenseListPage() {\r\n    // ... (no changes to the first block of state variables) ...\r\n    const [showCategoryModal, setShowCategoryModal] = useState(false); // <-- 2. ADD STATE FOR THE NEW MODAL\r\n\r\n    // The fetchData function now becomes our single source of truth for refreshing data\r\n    const fetchData = async () => {\r\n        try {\r\n            const [expensesRes, categoriesRes] = await Promise.all([\r\n                axiosInstance.get('/expenses/'),\r\n                axiosInstance.get('/expense-categories/')\r\n            ]);\r\n            setExpenses(expensesRes.data);\r\n            setCategories(categoriesRes.data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch data:', error);\r\n            setError('Could not fetch expenses or categories.');\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    // ... (no changes to handleInputChange, handleShowModal, handleCloseModal, handleSubmit, handleDelete) ...\r\n    const handleInputChange = (e) => { /* ... */ };\r\n    const handleShowModal = (expense = null) => { /* ... */ };\r\n    const handleCloseModal = () => setShowModal(false);\r\n    const handleSubmit = async (e) => { /* ... */ };\r\n    const handleDelete = async (expenseId) => { /* ... */ };\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className=\"d-flex justify-content-between align-items-center\">\r\n                    <h4>Expenses</h4>\r\n                    <div>\r\n                        {/* 3. ADD A BUTTON TO OPEN THE CATEGORY MANAGER */}\r\n                        <Button variant=\"secondary\" className=\"me-2\" onClick={() => setShowCategoryModal(true)}>\r\n                            Manage Categories\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={() => handleShowModal()}>\r\n                            + New Expense\r\n                        </Button>\r\n                    </div>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {/* ... (no changes to the table) ... */}\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            {/* ... (no changes to the Add/Edit Expense Modal) ... */}\r\n            <Modal show={showModal} onHide={handleCloseModal}>\r\n                {/* ... */}\r\n            </Modal>\r\n\r\n            {/* 4. RENDER THE NEW CATEGORY MANAGER MODAL */}\r\n            <CategoryManagerModal\r\n                show={showCategoryModal}\r\n                handleClose={() => setShowCategoryModal(false)}\r\n                categories={categories}\r\n                onUpdate={fetchData} // Pass fetchData as the callback to refresh the list\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ExpenseListPage;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,wBAAwB;AAClD,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACnF,OAAOC,oBAAoB,MAAM,oCAAoC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,YAAY,GAAGA,CAAA,KAAM,CAAE,mDAAoD;AAEjF,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnE;EACA,MAAMqB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnDvB,aAAa,CAACwB,GAAG,CAAC,YAAY,CAAC,EAC/BxB,aAAa,CAACwB,GAAG,CAAC,sBAAsB,CAAC,CAC5C,CAAC;MACFC,WAAW,CAACL,WAAW,CAACM,IAAI,CAAC;MAC7BC,aAAa,CAACN,aAAa,CAACK,IAAI,CAAC;IACrC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CE,QAAQ,CAAC,yCAAyC,CAAC;IACvD;EACJ,CAAC;EAED/B,SAAS,CAAC,MAAM;IACZoB,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,iBAAiB,GAAIC,CAAC,IAAK,CAAE,UAAW;EAC9C,MAAMC,eAAe,GAAGA,CAACC,OAAO,GAAG,IAAI,KAAK,CAAE,UAAW;EACzD,MAAMC,gBAAgB,GAAGA,CAAA,KAAMC,YAAY,CAAC,KAAK,CAAC;EAClD,MAAMC,YAAY,GAAG,MAAOL,CAAC,IAAK,CAAE,UAAW;EAC/C,MAAMM,YAAY,GAAG,MAAOC,SAAS,IAAK,CAAE,UAAW;EAEvD,oBACI5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACI7B,OAAA,CAACR,IAAI;MAAAqC,QAAA,gBACD7B,OAAA,CAACR,IAAI,CAACsC,MAAM;QAACC,SAAS,EAAC,mDAAmD;QAAAF,QAAA,gBACtE7B,OAAA;UAAA6B,QAAA,EAAI;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBnC,OAAA;UAAA6B,QAAA,gBAEI7B,OAAA,CAACT,MAAM;YAAC6C,OAAO,EAAC,WAAW;YAACL,SAAS,EAAC,MAAM;YAACM,OAAO,EAAEA,CAAA,KAAM9B,oBAAoB,CAAC,IAAI,CAAE;YAAAsB,QAAA,EAAC;UAExF;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnC,OAAA,CAACT,MAAM;YAAC6C,OAAO,EAAC,SAAS;YAACC,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAAC,CAAE;YAAAO,QAAA,EAAC;UAE5D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACdnC,OAAA,CAACR,IAAI,CAAC8C,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGPnC,OAAA,CAACP,KAAK;MAAC8C,IAAI,EAAEC,SAAU;MAACC,MAAM,EAAEjB;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C,CAAC,eAGRnC,OAAA,CAACF,oBAAoB;MACjByC,IAAI,EAAEjC,iBAAkB;MACxBoC,WAAW,EAAEA,CAAA,KAAMnC,oBAAoB,CAAC,KAAK,CAAE;MAC/CoC,UAAU,EAAEA,UAAW;MACvBC,QAAQ,EAAEpC,SAAU,CAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACJ,CAAC;AAEX;AAAC9B,EAAA,CAhEQD,eAAe;AAAAyC,EAAA,GAAfzC,eAAe;AAkExB,eAAeA,eAAe;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
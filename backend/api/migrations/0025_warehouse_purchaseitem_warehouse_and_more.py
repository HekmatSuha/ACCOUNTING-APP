# Generated by Django 5.2.6 on 2025-09-24 10:13

from decimal import Decimal

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_default_warehouses(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    Warehouse = apps.get_model('api', 'Warehouse')
    Product = apps.get_model('api', 'Product')
    WarehouseInventory = apps.get_model('api', 'WarehouseInventory')
    SaleItem = apps.get_model('api', 'SaleItem')
    PurchaseItem = apps.get_model('api', 'PurchaseItem')
    SaleReturnItem = apps.get_model('api', 'SaleReturnItem')
    PurchaseReturnItem = apps.get_model('api', 'PurchaseReturnItem')

    default_name = Warehouse.DEFAULT_NAME if hasattr(Warehouse, 'DEFAULT_NAME') else 'Main Warehouse'
    user_defaults = {}

    for user in User.objects.all():
        warehouse, _ = Warehouse.objects.get_or_create(
            created_by=user,
            name=default_name,
            defaults={'location': ''},
        )
        user_defaults[user.pk] = warehouse

    for product in Product.objects.select_related('created_by'):
        warehouse = user_defaults.get(product.created_by_id)
        if not warehouse:
            continue
        inventory, created = WarehouseInventory.objects.get_or_create(
            product=product,
            warehouse=warehouse,
            defaults={'quantity': product.stock_quantity or Decimal('0')},
        )
        if not created:
            inventory.quantity = product.stock_quantity or Decimal('0')
            inventory.save(update_fields=['quantity'])

    sale_items = SaleItem.objects.select_related('sale__created_by').filter(warehouse__isnull=True)
    for item in sale_items:
        warehouse = user_defaults.get(item.sale.created_by_id)
        if warehouse:
            item.warehouse = warehouse
            item.save(update_fields=['warehouse'])

    purchase_items = PurchaseItem.objects.select_related('purchase__created_by').filter(warehouse__isnull=True)
    for item in purchase_items:
        warehouse = user_defaults.get(item.purchase.created_by_id)
        if warehouse:
            item.warehouse = warehouse
            item.save(update_fields=['warehouse'])

    sale_return_items = SaleReturnItem.objects.select_related('sale_return__created_by').filter(warehouse__isnull=True)
    for item in sale_return_items:
        warehouse = user_defaults.get(item.sale_return.created_by_id)
        if warehouse:
            item.warehouse = warehouse
            item.save(update_fields=['warehouse'])

    purchase_return_items = PurchaseReturnItem.objects.select_related('purchase_return__created_by').filter(warehouse__isnull=True)
    for item in purchase_return_items:
        warehouse = user_defaults.get(item.purchase_return.created_by_id)
        if warehouse:
            item.warehouse = warehouse
            item.save(update_fields=['warehouse'])


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0024_expense_account_converted_amount_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("location", models.CharField(blank=True, default="", max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="warehouses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "unique_together": {("name", "created_by")},
            },
        ),
        migrations.AddField(
            model_name="purchaseitem",
            name="warehouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="purchase_items",
                to="api.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="purchasereturnitem",
            name="warehouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="purchase_return_items",
                to="api.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="saleitem",
            name="warehouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sale_items",
                to="api.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="salereturnitem",
            name="warehouse",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="sale_return_items",
                to="api.warehouse",
            ),
        ),
        migrations.CreateModel(
            name="WarehouseInventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="warehouse_stocks",
                        to="api.product",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="api.warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Warehouse Inventory",
                "verbose_name_plural": "Warehouse Inventory",
                "unique_together": {("warehouse", "product")},
            },
        ),
        migrations.RunPython(create_default_warehouses, migrations.RunPython.noop),
    ]

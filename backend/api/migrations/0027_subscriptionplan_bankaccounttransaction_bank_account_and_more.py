# Generated by Django 5.2.7 on 2025-10-16 05:21

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


def copy_bank_account_relationships(apps, schema_editor):
    mappings = [
        ("BankAccountTransaction", "bank_account"),
        ("Payment", "bank_account"),
        ("Expense", "bank_account"),
        ("Purchase", "bank_account"),
    ]

    for model_name, field_name in mappings:
        Model = apps.get_model("api", model_name)
        for obj in Model.objects.exclude(account_id=None).only("id", "account_id"):
            setattr(obj, f"{field_name}_id", obj.account_id)
            obj.save(update_fields=[field_name])


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0026_alter_sale_sale_date"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.SlugField(unique=True)),
                ("name", models.CharField(max_length=100)),
                ("user_limit", models.PositiveIntegerField(default=1)),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=10
                    ),
                ),
                (
                    "billing_interval",
                    models.CharField(
                        choices=[("monthly", "Monthly"), ("yearly", "Yearly")],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True, default="")),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["price", "name"],
            },
        ),
        migrations.AddField(
            model_name="bankaccounttransaction",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="api.bankaccount",
            ),
        ),
        migrations.AddField(
            model_name="expense",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expenses",
                to="api.bankaccount",
            ),
        ),
        migrations.AddField(
            model_name="payment",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payments",
                to="api.bankaccount",
            ),
        ),
        migrations.AddField(
            model_name="purchase",
            name="bank_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchases",
                to="api.bankaccount",
            ),
        ),
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="expensecategory",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name="warehouse",
            unique_together=set(),
        ),
        migrations.AddField(
            model_name="bankaccount",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bank_accounts",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="customer",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customers",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="expensecategory",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expense_categories",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="offer",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="offers",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="purchasereturn",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_returns",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="sale",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sales",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="salereturn",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sale_returns",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="supplier",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="suppliers",
                to="api.account",
            ),
        ),
        migrations.AddField(
            model_name="warehouse",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="warehouses",
                to="api.account",
            ),
        ),
        migrations.RunPython(copy_bank_account_relationships, migrations.RunPython.noop),
        migrations.RunSQL(
            "ALTER TABLE api_bankaccounttransaction ALTER COLUMN account_id DROP NOT NULL;",
            "ALTER TABLE api_bankaccounttransaction ALTER COLUMN account_id SET NOT NULL;",
        ),
        migrations.RunSQL(
            "UPDATE api_bankaccounttransaction SET account_id = NULL;",
            migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            "UPDATE api_expense SET account_id = NULL;",
            migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            "UPDATE api_payment SET account_id = NULL;",
            migrations.RunSQL.noop,
        ),
        migrations.RunSQL(
            "SET CONSTRAINTS ALL IMMEDIATE;",
            migrations.RunSQL.noop,
        ),
        migrations.AlterField(
            model_name="bankaccounttransaction",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="bank_account_transactions",
                to="api.account",
            ),
        ),
        migrations.AlterField(
            model_name="expense",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="expenses",
                to="api.account",
            ),
        ),
        migrations.AlterField(
            model_name="payment",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payments",
                to="api.account",
            ),
        ),
        migrations.AlterField(
            model_name="purchase",
            name="account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchases",
                to="api.account",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expensecategory",
            unique_together={("name", "account")},
        ),
        migrations.AlterUniqueTogether(
            name="product",
            unique_together={("sku", "account")},
        ),
        migrations.AlterUniqueTogether(
            name="warehouse",
            unique_together={("account", "name")},
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("trialing", "Trialing"),
                            ("active", "Active"),
                            ("past_due", "Past Due"),
                            ("canceled", "Canceled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("current_period_end", models.DateTimeField(blank=True, null=True)),
                ("trial_end", models.DateTimeField(blank=True, null=True)),
                ("cancel_at_period_end", models.BooleanField(default=False)),
                ("canceled_at", models.DateTimeField(blank=True, null=True)),
                ("seats_in_use", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscription",
                        to="api.account",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subscriptions",
                        to="api.subscriptionplan",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AccountMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_owner", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_billing_manager", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="api.account",
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_account_invitations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-is_owner", "-is_admin", "user__username"],
                "unique_together": {("account", "user")},
            },
        ),
    ]
